local data = require "collections.data"
local w_screen = tonumber(sys.get_config("display.width"))
local h_screen = tonumber(sys.get_config("display.height"))
local factory_spawn = nil
local id_adept = 0

go.property("IntervalBird", 100)
go.property("IntervalAirbus", 100)
go.property("IntervalAdept", 120)

function init(self)
	self.interval_bird = self.IntervalBird
	self.interval_airbus = self.IntervalAirbus
	self.interval_adept = self.IntervalAdept
	self.start_bird = vmath.vector3()
	self.start_airbus = vmath.vector3()
	self.start_adept = vmath.vector3()
	data.gen_seed()
end

local function spawn_bird(self)
	if self.interval_bird <= 0 then
		self.start_bird.y = math.random(350 , 500)
		self.start_bird.x = -100
		factory.create("/factors#bird", self.start_bird)
		self.interval_bird = self.IntervalBird
	else
		self.interval_bird = self.interval_bird - 1
	end
end

local function spawn_airbus(self)
	if self.interval_airbus <= 0 then
		self.start_airbus.y = math.random(350 , 500)
		self.start_airbus.x = w_screen + 100
		factory.create("/factors#airbus", self.start_airbus)
		self.interval_airbus = self.IntervalAirbus
	else
		self.interval_airbus = self.interval_airbus - 1
	end
end

local function spawn_adept(self)
	if self.interval_adept <= 0 then
		local a, rand = math.modf(os.clock())
		rand = (a + 1) % 3 
		
		if rand == 0  then
			self.start_adept.x = math.random(data.BUILD1.x, data.BUILD1.y)
			self.start_adept.y = data.BUILD1.z
			data.BUILD1_COUNT_ADEPTS = data.BUILD1_COUNT_ADEPTS + 1
		end
		
		if rand == 1 then
			self.start_adept.x = math.random(data.BUILD2.x, data.BUILD2.y)
			self.start_adept.y = data.BUILD2.z
			data.BUILD2_COUNT_ADEPTS = data.BUILD2_COUNT_ADEPTS + 1
		end

		if rand == 2 then
			self.start_adept.x = math.random(data.BUILD3.x, data.BUILD3.y)
			self.start_adept.y = data.BUILD3.z
			data.BUILD3_COUNT_ADEPTS = data.BUILD3_COUNT_ADEPTS + 1
		end

		id_adept = table.getn(data.ADEPTS) + 1
		factory_spawn = factory.create("/factors#adepts", self.start_adept, nil, { roof_num = rand, id = id_adept })
		table.insert(data.ADEPTS, factory_spawn)
		
		self.interval_adept = self.IntervalAdept
	else
		self.interval_adept = self.interval_adept - 1
	end
end

function update(self, dt)
	spawn_bird(self)
	spawn_airbus(self)
	spawn_adept(self)
end